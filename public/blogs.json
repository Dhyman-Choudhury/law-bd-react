[
    {
      "id": "q1",
      "question": "What is useState and how does it work in React?",
      "answer": "useState is a Hook in React that allows you to add state variables to functional components. It returns an array with two elements: the current state value and a function to update it. When you call the update function, React re-renders the component with the new state."
    },
    {
      "id": "q2",
      "question": "What is the purpose of useEffect in React?",
      "answer": "useEffect is a Hook used to perform side effects in React components, such as data fetching, event listeners, or manually modifying the DOM. It runs after the render and can be configured to run only on specific state or prop changes using the dependency array."
    },
    {
      "id": "q3",
      "question": "What is a custom hook in React and when should you use one?",
      "answer": "A custom hook is a JavaScript function that starts with 'use' and allows you to reuse stateful logic across multiple components. You should use custom hooks when you have reusable logic that involves React Hooks like useState or useEffect, making your code cleaner and more maintainable."
    },
    {
      "id": "q4",
      "question": "Difference between controlled and uncontrolled components? Which one is better?",
      "answer": "Controlled components are form elements whose values are controlled by React state. Uncontrolled components manage their state internally using refs. Controlled components are generally preferred for better control, validation, and testing, though uncontrolled components can be simpler for small forms."
    },
    {
      "id": "q5",
      "question": "Tell us something about useFormStatus() (explore and explain)",
      "answer": "useFormStatus is a React Hook from the React DOM package used to track the status of a form submission. It helps in providing user feedback, such as showing loading indicators or disabling buttons while a form is submitting. It's especially useful with server components and progressive enhancement in React 18+."
    }
  ]
  